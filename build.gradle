plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.rolling'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

jar {
	enabled = false
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.h2database:h2:2.2.224'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'me.paulschwarz:spring-dotenv:4.0.0'
	
	// MariaDB Driver
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.3.2'

	// Swagger OpenAPI 3.0
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	implementation 'org.springdoc:springdoc-openapi-starter-common:2.3.0'
	
	// BLOB 서비스를 위한 Spring Security & JWT
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'
	
	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
 

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.junit.platform:junit-platform-suite:1.9.3'
	testImplementation 'org.junit.platform:junit-platform-suite-api:1.9.3'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Hibernate Micrometer
	implementation 'org.hibernate.orm:hibernate-micrometer:6.4.4.Final'
	// P6Spy
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}

compileJava {
	options.compilerArgs += '-parameters'
}
