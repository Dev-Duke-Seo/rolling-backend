spring.application.name=rolling

# MariaDB 데이터베이스 설정
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver



# SQL 초기화 스크립트 실행 설정
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true
spring.sql.init.data-locations=classpath:data.sql
spring.sql.init.continue-on-error=true

# JPA 설정 - 스키마 관리
spring.jpa.hibernate.ddl-auto=create-drop
# spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.naming.physical-strategy=com.common.config.SnakeCasePhysicalNamingStrategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect
spring.jpa.properties.hibernate.generate_statistics=true 

# 초기화 데이터 관련 설정 - 제거 (spring.sql.init으로 대체)

# 서버 포트
server.port=8080

# 로깅 레벨
logging.level.com.rolling=ERROR
logging.level.org.springframework=ERROR
logging.level.org.springframework.beans=ERROR
logging.level.org.hibernate=ERROR

# 타임존 설정
spring.jackson.time-zone=Asia/Seoul

spring.web.resources.add-mappings=true

# 개발 환경 설정
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true

# URL 패턴 매칭 설정
spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER
spring.mvc.pathmatch.use-trailing-slash-match=true

# Swagger OpenAPI 설정
springdoc.api-docs.path=/v3/api-docs
springdoc.api-docs.version=OPENAPI_3_0
springdoc.api-docs.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.display-request-duration=true
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.filter=true

# Swagger 패키지 스캔 및 경로 설정
springdoc.packagesToScan=com.rolling.controller,com.blob.controller
springdoc.pathsToMatch=/**
springdoc.swagger-ui.tags-sorter=alpha

# API 서버 URL 설정
rolling.openapi.dev-url=http://localhost:8080

# 추가적인 MySQL 최적화 설정
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=30000
spring.jpa.properties.hibernate.dialect.storage_engine=innodb

management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.prometheus.enabled=true
management.prometheus.metrics.export.enabled=true 
management.metrics.export.prometheus.enabled=true 

# BLOB 서비스 설정
blob.jwt.secret=${BLOB_JWT_SECRET:blob-default-secret-key-for-development}
blob.jwt.expiration=86400000
blob.jwt.refresh-expiration=604800000

# BLOB OAuth2 설정
blob.oauth.kakao.client-id=${BLOB_KAKAO_CLIENT_ID:}
blob.oauth.kakao.client-secret=${BLOB_KAKAO_CLIENT_SECRET:}
blob.oauth.kakao.redirect-uri=${BLOB_KAKAO_REDIRECT_URI:http://localhost:8080/api/blob/auth/kakao/callback}

blob.oauth.naver.client-id=${BLOB_NAVER_CLIENT_ID:}
blob.oauth.naver.client-secret=${BLOB_NAVER_CLIENT_SECRET:}
blob.oauth.naver.redirect-uri=${BLOB_NAVER_REDIRECT_URI:http://localhost:8080/api/blob/auth/naver/callback}

blob.oauth.google.client-id=${BLOB_GOOGLE_CLIENT_ID:}
blob.oauth.google.client-secret=${BLOB_GOOGLE_CLIENT_SECRET:}
blob.oauth.google.redirect-uri=${BLOB_GOOGLE_REDIRECT_URI:http://localhost:8080/api/blob/auth/google/callback}

# BLOB 파일 업로드 설정
blob.file.upload.path=${BLOB_FILE_UPLOAD_PATH:./uploads/blob}
blob.file.max-size=10MB
blob.file.allowed-types=image/jpeg,image/png,image/gif,image/webp

# P6Spy 설정 - SQL 로깅을 위해 데이터소스 URL에 p6spy 프록시 사용
# 개발 환경에서만 활성화하려면 프로파일별로 설정 가능